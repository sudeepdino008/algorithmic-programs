#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <iomanip>
#include <climits>
#include <map>
#include <stack>
#include <queue>
#include <vector>
#define round_int(n) floor(n+0.5)
#define round_up(n,s) round_int(n*pow(10,s))/pow(10,s) 
#define loop(a,s,e) for(a=s;a<=e;a++)
#define lld long long int
#define mod 1000000007
#define debug(format, ...) fprintf(stderr,format,## __VA_ARGS__)
using namespace std;


inline lld input( )
{
    lld n=0;
    lld ch=getchar_unlocked();
    while( ch >= '0' && ch <= '9' )
    n = (n<<3)+(n<<1) + ch-'0', ch=getchar_unlocked();
    return n;
}

inline lld input_gen()
{
	lld t=0;
	char c;
	c=getchar_unlocked();
loop:
	while( (c<'0' || c>'9') && c != '-')
		c=getchar_unlocked();
	int n=0;
	if (c == '-' ) {
		c = getchar_unlocked();
		if (c >='0' && c <= '9')
			n=1;
		else {goto loop;}
	}
	while(c>='0' && c<='9')
	{
		t=(t << 3)+(t << 1)+c-'0';
		c=getchar_unlocked();
	}
	if (n==0)
		return(t);
	else {return (-t);}
}


lld expo(lld n)
{
	if(n==0)
		return 1;
	if(n==1)
		return 2;
	lld k=expo(n/2);
	if(n%2==0)
		return (k*k)%mod;
	else
		return (k*k*2)%mod;
}

int main()
{
	lld t,n,c,x,i;
	lld array[]={2,6,20,70,252,924,3432,12870,48620,184756,705432,2704156,10400600,40116600,155117520,601080390,333606206,75135237,345263555,846527861,257870674,98948992,430669969,603457371,605552882,529476678,412019539,547219610,289070178,737009364,997262645,114221638,480267059,69287808,358906215,249018951,712345048,917151492,929264847,720596125,676501747,769030701,203144612,803344602,444340851,366739879,791779091,675792218,267422234,538992043,625027297,129915814,873251341,868070111,549805147,72441818,427576332,833492345,915884877,333009989,927678970,422726213,899707189,664462886,883560366,598375978,718925513,178086577,982546699,673542582,323084605,922252734,910319061,724781114,266463608,427263280,620033287,977055361,731587109,583058742,836356964,105516688,853259124,964149357,92735064,647853396,197210041,307085387,322564342,194200375,124181707,950548968,620463614,170780746,900580233,896058825,606996953,211518471,690285631,407336795,512370206,941395126,174485428,694586223,793686093,254108765,2339562,787092706,133928735,351461689,30144734,298612067,118366631,120512721,532128924,464168634,53868222,78966646,617060424,657957343,496987087,586358386,124517132,141221475,362626355,555860551,876105808,240734056,548351197,661891682,660362261,737504148,262234556,582337705,728130991,504757315,595602136,794066473,438221751,218055254,670546472,123445779,890658003,508595074,710123803,967753777,660569456,417134978,166296479,956301965,792674038,502371475,911415677,672787159,353435237,268184078,266772178,861180202,987347455,249547951,274594930,453014346,377051063,735313380,841431525,837516064,837040094,314386068,733113664,712065068,167417387,28187946,603755395,362104837,769995288,980322100,949759316,204096123,316897381,852957328,612349101,442667279,530858536,987229152,786892487,988571089,2534905,595219040,861350022,25806906,998245359,576333023,325266451,380186762,373257945,91263832,557022194,505290560,387943228,587893473,614380910,293024804,770197491,808533110,860390637,268160675,891307813,816276350,80260628,786944795,116623284,484260841,880853114,272189507,49016723,982650076,580529773,96609629,545373589,512900039,481347656,92225317,507087589,764894208,666111089,437310614,133054686,425788439,26945985,585810500,957217657,294756658,734436443,375912964,6835565,476436877,95819758,508524245,188837350,170442418,439691310,350172740,85051669,69017726,95915656,521094205,792708032,325729624,894679701,515561345,627858427,117561799,995009557,775353091,746311539,393478079,648671235,426865768,298761396,23516642,388905523,293111354,436376123,931592546,100471347,844738990,668508458,549641963,49499867,982817993,757967020,55706537,416557237,473407354,959277356,293926230,888384151,216210076,458272487,122673704,913309241,79383682,945948982,932063873,328732213,256685962,188718156,3562076,509033345,584346933,116876741,268076300,763308090,150080584,545067552,284695414,695787071,791901377,764315181,272165270,651636723,569118820,147306164,88255533,477033572,891944519,431674181,990127406,436301655,194004663,938758173,306707295,780779929,506681609,734620512,351554052,498635419,871908741,861478778,778030851,275500139,25755206,870663212,761228982,354077577,15365037,299898284,222154725,385748655,813384017,514482369,398203667,542374999,681222291,917837078,725408785,840950207,518588085,779257416,394798719,723506901,696814098,267158333,991498690,250101988,322661693,156222201,813646149,393188323,793363639,505116283,91458776,257668198,769330032,163126699,870691479,7299833,213516094,153710521,75099244,261199750,540593473,757191549,129001387,863243899,524761128,970844171,600926421,213456745,258078561,621219478,814871344,180049047,858270793,223172372,274481120,88510780,14950468,582150422,357116672,258613049,273935892,391963219,341853059,973428581,733230216,417503636,121470700,876003776,720035578,485154901,831001459,856672478,975640796,938129539,863941724,620180268,839413622,644173699,358473912,439589038,348208933,482919056,305523148,956386303,141030968,194880474,631507775,904361124,305715882,16996289,888291005,481065737,549958273,987544128,330044063,697490185,222030147,994459347,73101840,387071960,503799340,461987896,279734649,268210427,893178747,933871041,371307173,334313499,717094394,939295918,873205430,611190266,566368469,122639983,760639567,842280726,995413843,334751411,32938583,231378194,616773506,920291424,785128327,523501477,934707687,875588188,659158142,618106237,318566683,521191043,272723491,813751695,418822832,853670123,625848586,297154291,610900329,898455770,198612379,956277663,678113757,417949121,493270833,848381084,213917528,327987378,387470927,247591712,78674962,972539874,877563967,246502932,833072896,394047046,717389661,212462652,83271261,533154894,805398088,831549100,397434765,240267271,931150624,842412164,790050234,323280792,586880209,334895545,317807089,630422620,600428586,811043223,374492535,799487337,771338495,9815373,858499187,264223182,159835829};
	//cout<<(1[&array]-array)<<endl;
	//cin>>t;
	t=1001;
	while(t--)
	{
		//cin>>n;
		//loop(i,1,n)
		//	cin>>c;
		x=expo(t);
		if(t%2==0)
		{
			x=x-array[t/2-1];
			if(x<0)
				x+=mod;
			x%=mod;
		}
	   
		x=x>>1;
		printf("%lld %lld\n",t,x);
	}
	return 0;
}
